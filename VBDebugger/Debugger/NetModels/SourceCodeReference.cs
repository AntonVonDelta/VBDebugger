// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace NetModels
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SourceCodeReference : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static SourceCodeReference GetRootAsSourceCodeReference(ByteBuffer _bb) { return GetRootAsSourceCodeReference(_bb, new SourceCodeReference()); }
  public static SourceCodeReference GetRootAsSourceCodeReference(ByteBuffer _bb, SourceCodeReference obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SourceCodeReference __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Filename { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFilenameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetFilenameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetFilenameArray() { return __p.__vector_as_array<byte>(4); }
  public string ScopeName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetScopeNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetScopeNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetScopeNameArray() { return __p.__vector_as_array<byte>(6); }
  public int LineNumber { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetModels.SourceCodeReference> CreateSourceCodeReference(FlatBufferBuilder builder,
      StringOffset filenameOffset = default(StringOffset),
      StringOffset scope_nameOffset = default(StringOffset),
      int line_number = 0) {
    builder.StartTable(3);
    SourceCodeReference.AddLineNumber(builder, line_number);
    SourceCodeReference.AddScopeName(builder, scope_nameOffset);
    SourceCodeReference.AddFilename(builder, filenameOffset);
    return SourceCodeReference.EndSourceCodeReference(builder);
  }

  public static void StartSourceCodeReference(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddFilename(FlatBufferBuilder builder, StringOffset filenameOffset) { builder.AddOffset(0, filenameOffset.Value, 0); }
  public static void AddScopeName(FlatBufferBuilder builder, StringOffset scopeNameOffset) { builder.AddOffset(1, scopeNameOffset.Value, 0); }
  public static void AddLineNumber(FlatBufferBuilder builder, int lineNumber) { builder.AddInt(2, lineNumber, 0); }
  public static Offset<NetModels.SourceCodeReference> EndSourceCodeReference(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetModels.SourceCodeReference>(o);
  }
  public SourceCodeReferenceT UnPack() {
    var _o = new SourceCodeReferenceT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SourceCodeReferenceT _o) {
    _o.Filename = this.Filename;
    _o.ScopeName = this.ScopeName;
    _o.LineNumber = this.LineNumber;
  }
  public static Offset<NetModels.SourceCodeReference> Pack(FlatBufferBuilder builder, SourceCodeReferenceT _o) {
    if (_o == null) return default(Offset<NetModels.SourceCodeReference>);
    var _filename = _o.Filename == null ? default(StringOffset) : builder.CreateString(_o.Filename);
    var _scope_name = _o.ScopeName == null ? default(StringOffset) : builder.CreateString(_o.ScopeName);
    return CreateSourceCodeReference(
      builder,
      _filename,
      _scope_name,
      _o.LineNumber);
  }
}

public class SourceCodeReferenceT
{
  public string Filename { get; set; }
  public string ScopeName { get; set; }
  public int LineNumber { get; set; }

  public SourceCodeReferenceT() {
    this.Filename = null;
    this.ScopeName = null;
    this.LineNumber = 0;
  }
}


static public class SourceCodeReferenceVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Filename*/, false)
      && verifier.VerifyString(tablePos, 6 /*ScopeName*/, false)
      && verifier.VerifyField(tablePos, 8 /*LineNumber*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
