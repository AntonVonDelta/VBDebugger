// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace NetModels
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Variable : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static Variable GetRootAsVariable(ByteBuffer _bb) { return GetRootAsVariable(_bb, new Variable()); }
  public static Variable GetRootAsVariable(ByteBuffer _bb, Variable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Variable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public string Value { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetValueBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetValueBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetValueArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<NetModels.Variable> CreateVariable(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      StringOffset valueOffset = default(StringOffset)) {
    builder.StartTable(2);
    Variable.AddValue(builder, valueOffset);
    Variable.AddName(builder, nameOffset);
    return Variable.EndVariable(builder);
  }

  public static void StartVariable(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, StringOffset valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<NetModels.Variable> EndVariable(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetModels.Variable>(o);
  }
  public VariableT UnPack() {
    var _o = new VariableT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(VariableT _o) {
    _o.Name = this.Name;
    _o.Value = this.Value;
  }
  public static Offset<NetModels.Variable> Pack(FlatBufferBuilder builder, VariableT _o) {
    if (_o == null) return default(Offset<NetModels.Variable>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _value = _o.Value == null ? default(StringOffset) : builder.CreateString(_o.Value);
    return CreateVariable(
      builder,
      _name,
      _value);
  }
}

public class VariableT
{
  public string Name { get; set; }
  public string Value { get; set; }

  public VariableT() {
    this.Name = null;
    this.Value = null;
  }
}


static public class VariableVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Name*/, false)
      && verifier.VerifyString(tablePos, 6 /*Value*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
